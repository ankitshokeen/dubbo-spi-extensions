name: Build and Test For PR

on: [push, pull_request, workflow_dispatch]

permissions:
  contents: read

env:
  FORK_COUNT: 2
  FAIL_FAST: 0
  SHOW_ERROR_DETAIL: 1
  VERSIONS_LIMIT: 4
  JACOCO_ENABLE: true
  CANDIDATE_VERSIONS: '
    spring.version:5.3.24;
    spring-boot.version:2.7.6;
  '

jobs:
  check-license:
    name: "Check License"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Check License
        uses: apache/skywalking-eyes@v0.5.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: "Set up JDK 17"
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17

  build-tools:
    name: "Build-tools"
    needs: check-license
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        name: Checkout Dubbo
        with:
          repository: 'apache/dubbo'
          ref: '3.2'
          path: dubbo
      - name: "Set up JDK 17"
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17
      - name: "Build tools"
        run: |
          cd ./dubbo
          ./mvnw --batch-mode -U -e --no-transfer-progress install -pl dubbo-build-tools -am

  build-source:
    name: "Build Dubbo-SPI-Extensions"
    needs: [check-license, build-tools]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17
      - name: "Compile Dubbo-SPI-Extensions"
        run: |
          ./mvnw --batch-mode --no-snapshot-updates -e --no-transfer-progress clean compile

  unit-test:
    needs: [check-license, build-source]
    name: "Unit Test ${{ matrix.os }} with JDK ${{ matrix.jdk }}"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        jdk: [17]
      fail-fast: false
    env:
      DISABLE_FILE_SYSTEM_TEST: true
    steps:
      - uses: actions/checkout@v4
      - name: "Set up JDK ${{ matrix.jdk }}"
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 17

      - name: "Test with Maven (Linux)"
        if: runner.os == 'Linux'
        run: |
          ./mvnw --batch-mode --no-snapshot-updates -e --no-transfer-progress clean test verify -Pjacoco
        shell: bash

      - name: "Test with Maven (Windows)"
        if: runner.os == 'Windows'
        run: |
          ./mvnw --batch-mode --no-snapshot-updates -e --no-transfer-progress clean test verify -Pjacoco
        shell: pwsh

      - name: "Check Jacoco Report (Linux)"
        if: runner.os == 'Linux'
        run: |
          if [ -f "./target/site/jacoco/jacoco.xml" ]; then
            echo "Jacoco Report Found"
          else
            echo "Jacoco Report NOT Found!"
            exit 1
          fi
        shell: bash

      - name: "Check Jacoco Report (Windows)"
        if: runner.os == 'Windows'
        run: |
          if (Test-Path "./target/site/jacoco/jacoco.xml") {
            Write-Host "Jacoco Report Found"
          } else {
            Write-Host "Jacoco Report NOT Found!"
            exit 1
          }
        shell: pwsh

      - name: "Upload Coverage to Codecov"
        if: env.JACOCO_ENABLE == 'true'
        uses: codecov/codecov-action@v4
        with:
          files: ./target/site/jacoco/jacoco.xml
          fail_ci_if_error: true
          verbose: true
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: "Upload Surefire Reports (if failed)"
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: surefire-reports-${{ matrix.os }}-${{ matrix.jdk }}
          path: "**/target/surefire-reports/**"
